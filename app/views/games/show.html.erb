 <div class="main" data-turbo="false">
    <div class="timer-display">
      Temps restant : <span id="timer"></span>
    </div>
    <div class="questions" id="questions">
      <!-- Les questions seront générées par JS -->
    </div>
    <div class="progress-bar" id="progress-bar">
      <!-- Les étapes de progression -->
    </div>
  </div>
  <script>
    // --- CONFIG ---
    const questions2 = [
      { q: "Quel est le nom du plus célèbre pharaon de l'Égypte antique ?", a: "tutankhamon" },
      { q: "Comment s'appelle le fleuve qui traverse l'Égypte ?", a: "nil" },
      { q: "Quel monument est la plus grande pyramide d'Égypte ?", a: "kheops" },
      { q: "Comment s'appelle l'écriture de l'Égypte antique ?", a: "hiéroglyphes" },
      { q: "Quel animal était sacré pour les Égyptiens ?", a: "chat" },
      { q: "Quel est le dieu à tête de chacal, gardien des tombeaux ?", a: "anubis" },
    ];
    let current = 0;
    let answers = Array(questions2.length).fill("");
    let timer = 10;
    let timerInterval;
    // --- TIMER ---
    function startTimer() {
      timerInterval = setInterval(() => {
        timer--;
        const min = String(Math.floor(timer/60)).padStart(2,'0');
        const sec = String(timer%60).padStart(2,'0');
        document.getElementById('timer').textContent = `${min}:${sec}`;
        if (timer <= 0) {
          clearInterval(timerInterval);
          disableAll();
          window.location.href = '/listemissions.html';
        }
      }, 1000);
    }
    // --- QUESTIONS ---
    function renderQuestions() {
      const qDiv = document.getElementById('questions');
      qDiv.innerHTML = '';
      questions2.forEach((q, i) => {
        const box = document.createElement('div');
        box.className = 'question-box' + (i === current ? ' active' : '');
        box.innerHTML = `
          <div class="question-title">Question ${i+1}</div>
          <div>${q.q}</div>
          <input class="question-input" id="input${i}" type="text" placeholder="Votre réponse..." ${i !== current ? 'disabled' : ''} value="${answers[i]}">
          <button class="question-btn" id="btn${i}" ${i !== current ? 'disabled' : ''}>Valider</button>
        `;
        qDiv.appendChild(box);
        if (i === current) {
          setTimeout(() => { document.getElementById(`input${i}`).focus(); }, 100);
        }
        document.addEventListener('keydown', function handler(e) {
          if (e.key === 'Enter' && i === current && document.activeElement === document.getElementById(`input${i}`)) {
            document.getElementById(`btn${i}`).click();
            document.removeEventListener('keydown', handler);
          }
        });
        document.getElementById(`btn${i}`).onclick = () => submitAnswer(i);
      });
    }
    function submitAnswer(i) {
      const val = document.getElementById(`input${i}`).value.trim().toLowerCase();
      if (val === questions2[i].a) {
        answers[i] = val;
        if (i < questions2.length - 1) {
          current++;
          renderQuestions();
          renderProgress();
        } else {
          document.getElementById('congrats-icon').style.display = 'inline';
          disableAll();
          clearInterval(timerInterval);
          // Stocker les résultats (tous vrais)
          localStorage.setItem('missionsResults', JSON.stringify(Array(questions2.length).fill(true)));
          window.location.href = '/assets/images/victoire.html';
        }
      } else {
        alert('Mauvaise réponse, essayez encore !');
      }
    }
    function disableAll() {
      for (let i = 0; i < questions2.length; i++) {
        document.getElementById(`input${i}`).disabled = true;
        document.getElementById(`btn${i}`).disabled = true;
      }
    }
    // --- PROGRESS ---
    function renderProgress() {
      const pDiv = document.getElementById('progress-bar');
      pDiv.innerHTML = '';
      for (let i = 0; i < questions2.length; i++) {
        const step = document.createElement('div');
        step.className = 'progress-step' + (answers[i] ? ' filled' : '');
        step.textContent = i+1;
        pDiv.appendChild(step);
      }
    }
    // --- STOP ---
    function stopGame() {
  clearInterval(timerInterval);
  disableAll();
  // Stocker les résultats réels (vrai/faux)
  const results = questions2.map((q, idx) => answers[idx] && answers[idx] === q.a);
  localStorage.setItem('missionsResults', JSON.stringify(results));
  window.location.href = '/listemissions.html';
    }
    // --- INIT ---
    window.onload = function() {
      // Simuler le nom utilisateur (à remplacer par une vraie variable si besoin)
      // document.getElementById('username').textContent = 'Utilisateur';
      renderQuestions();
      renderProgress();
      startTimer();
    };
  </script>
